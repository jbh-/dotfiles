# .functions
# vim:syntax=sh

#
# Functions on home path
#

function h { cd ~/$1; }
function d { cd ~/Development/$1; }

#
# ANSI colouring functions
#

ERROR_COLOR=";31"
WARNING_COLOR=";35"
INFO_COLOR=";36"
VERBOSE_COLOR=";32"
DEBUG_COLOR=";34"

error()   { local opts ; [ $1 = "-n" ] && { opts=$1 ; shift ; } ; echo $opts "[1m[1${ERROR_COLOR}m$*[0m" ; }
warning() { local opts ; [ $1 = "-n" ] && { opts=$1 ; shift ; } ; echo $opts "[1m[1${WARNING_COLOR}m$*[0m" ; }
info()    { local opts ; [ $1 = "-n" ] && { opts=$1 ; shift ; } ; echo $opts "[1m[1${INFO_COLOR}m$*[0m" ; }
verbose() { local opts ; [ $1 = "-n" ] && { opts=$1 ; shift ; } ; echo $opts "[1m[1${VERBOSE_COLOR}m$*[0m" ; }
debug()   { local opts ; [ $1 = "-n" ] && { opts=$1 ; shift ; } ; echo $opts "[1m[1${DEBUG_COLOR}m$*[0m" ; }

highlight() { local opts ; [ $1 = "-n" ] && { opts=$1 ; shift ; } ; echo $opts "[1m[1;37m$*[0m" ; }
danger()    { local opts ; [ $1 = "-n" ] && { opts=$1 ; shift ; } ; echo $opts "[47m[1;5;31m$*[0m" ; }

#
# cross-platform functions
#

ttitle() { echo -n "]0;$@"; }

pecho() {
  for arg ; do
    echo "$arg" | tr ':;' '\n\n' ;
  done
}
