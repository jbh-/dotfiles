# .functions
# vim:syntax=sh

#
# Functions on home path
#

function h { cd ~/$1; }
function d { cd ~/Development/$1; }

#
# ANSI colouring functions
#

ERROR_COLOR=";31"
WARNING_COLOR=";35"
INFO_COLOR=";36"
VERBOSE_COLOR=";32"
DEBUG_COLOR=";34"

error()   { local opts ; [ $1 = "-n" ] && { opts=$1 ; shift ; } ; echo $opts "[1m[1${ERROR_COLOR}m$*[0m" ; }
warning() { local opts ; [ $1 = "-n" ] && { opts=$1 ; shift ; } ; echo $opts "[1m[1${WARNING_COLOR}m$*[0m" ; }
info()    { local opts ; [ $1 = "-n" ] && { opts=$1 ; shift ; } ; echo $opts "[1m[1${INFO_COLOR}m$*[0m" ; }
verbose() { local opts ; [ $1 = "-n" ] && { opts=$1 ; shift ; } ; echo $opts "[1m[1${VERBOSE_COLOR}m$*[0m" ; }
debug()   { local opts ; [ $1 = "-n" ] && { opts=$1 ; shift ; } ; echo $opts "[1m[1${DEBUG_COLOR}m$*[0m" ; }

highlight() { local opts ; [ $1 = "-n" ] && { opts=$1 ; shift ; } ; echo $opts "[1m[1;37m$*[0m" ; }
danger()    { local opts ; [ $1 = "-n" ] && { opts=$1 ; shift ; } ; echo $opts "[47m[1;5;31m$*[0m" ; }

#
# cross-platform functions
#

ttitle() { echo -n "]0;$@"; }

pecho() {
    for arg ; do
        echo "$arg" | tr ':;' '\n\n' ;
    done
}

# Make directory and move to it
mkcdr() { mkdir -p $1 && cd $1; }

# Extract
extract() {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)   tar xjf $1 ;;
            *.tar.gz)    tar xzf $1 ;;
            *.bz2)       bunzip2 $1 ;;
            *.rar)       rar x $1 ;;
            *.gz)        gunzip $1 ;;
            *.tar)       tar xf $1 ;;
            *.tbz2)      tar xjf $1 ;;
            *.tgz)       tar xzf $1 ;;
            *.zip)       unzip $1 ;;
            *.Z)         uncompress $1 ;;
            *.7z)        7z x $1 ;;
            *)           echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}
